			  UPDATE INSTRUCTIONS

This file contains update instructions which will have to be performed
in addition to the usual steps. In chronological order:

--- Production state Nov. 2015 ---

* 2015-11-26: Full backup required

  Due to heavy refactoring of the document storage, modification and
  retrieval facilities it is of uttermost importance to perform a full
  backup _before_ upgrading production to the newest version.

	$ cp -R ~/ecs-storage-vault ~/ecs-storage-vault.bak
	$ pg_dump -Fc -Ox ecs > ~/`date +F`.pgdump

  Better backup too much, than not enough!

* 2015-11-26: Mediaserver removal

  The mediaserver has been removed. The caching and rendering
  directories can be removed.

	$ rm -rf ~/ecs-rendercache ~/ecs-doccache

* 2015-11-26: Handling of incominng files

  Due to refactoring of the document upload pipeline, the incoming file
  directory is not used anymore.

	$ rm -rf ~/ecs-incoming ~/ecs-temp/incoming-copy

* 2015-11-27: Removal of the genfile directory

  The genfile directory has not been used for quite some time now. The
  related settings in settings.py have been removed.

	$ rm -rf ~/ecs-generated

* 2015-12-10: Storage vault options changed

  The deployment specific django configuration files need to be adapted
  for the changed settings.

  The STORAGE_VAULT and STORAGE_VAULT_OPTIONS have been removed. Use the
  STORAGE_VAULT_DIR option instead to set the working directory of the
  storage valt. e.g.:

	STORAGE_VAULT = 'ecs.documents.storagevault.LocalFileStorageVault'
	STORAGE_VAULT_OPTIONS = {
	    'LocalFileStorageVault.rootdir': '/home/ecs/ecs-storage-vault',
	}

  needs to be replaced with

	STORAGE_VAULT_DIR = '/home/ecs/ecs-storage-vault'

* 2015-12-10: ecs-temp unused

  The ~/ecs-temp directory, the TEMPFILE_DIR setting and the TEMPFILE_DIR_MAXAGE
  setting are not used anymore. The ~/ecs-temp directory can be removed.

	$ rm -rf ~/ecs-temp

* 2015-12-18: Manual intervention required for django migration transition

  A database migration mechanism, similar to south, has been integrated into
  django. To aid the transition from south to django migrations, the initial set
  of django migrations needs to be fake applied when upgrading from a legacy
  database.

	# Fake apply initial migrations. Answer 'no' when asked whether to
	# delete stale content types. Ignore the error messages regarding the
	# failed creation of content types.
	$ for app in auth admin contenttypes sessions sites reversion \
		boilerplate docstash documents help meetings notifications \
		pki scratchpad tracking users votes workflow
	  do
		./manage.py migrate --fake $app 0001_initial
	  done
	$ ./manage.py migrate --fake billing 0002_auto_20151217_1249
	$ ./manage.py migrate --fake checklists 0002_auto_20151217_1249
	$ ./manage.py migrate --fake communication 0003_auto_20151217_1249
	$ ./manage.py migrate --fake core 0003_auto_20151217_1249
	$ ./manage.py migrate --fake tasks 0002_auto_20151217_1249

	# Migration to bring the legacy database up to date. This might take a
	# couple of minutes.
	$ ./manage.py migrate core 0006_production_compat3

	# Run remaining migrations. Now answer with 'yes' when asked whether to
	# delete stale content types.
	$ ./manage.py migrate

* 2015-12-18: Client certificate authority needs to be rebuilt

  The client certificate authority has to be rebuilt. All existing certificates
  will be rendered invalid.

	$ mv ~/ecs-ca ~/ecs-ca.bak
	$ ./manage.py bootstrap

* 2016-01-05: Undeliverable mail directory renamed

  For simplicity, the undeliverable mail directory has been renamed.

	$ mv ~/ecs-mail/undeliverable ~/ecs-undeliverable-mail
	$ rmdir ~/ecs-mail

* 2016-01-07: ECS ported to python3

  The ECS system has been ported to python3. All virtual environments need to be
  regenerated. It is recommended to use python's builtin venv module (separate
  package on debian based systems) instead of virtualenv.

	# apt-get install python3 python3-dev python3.4-venv
	$ python3 -m venv ../env3; . ../env3/bin/activate
	$ ./install-dep.sh -r requirements-all.freeze

  All remaining python2 .pyc files can be removed.

	$ find . -name '*.pyc' -delete

* 2016-02-10: Storage vault settings

  All storage vault options have been moved to the settings.STORAGE_VAULT
  dictionary. Existing configuration files that contain the STORAGE_VAULT_DIR,
  STORAGE_ENCRYPT and STORAGE_DECRYPT settings have to be adapted. See
  ecs/settings.py for a working configuration sample.

* 2016-06-14: Help system attachments are now saved in the database

  The help system attachments have been moved to the database. The ecs-help
  folder can be removed after the migration has been run.

	$ rm -r ~/ecs-help

--- Next release ---
